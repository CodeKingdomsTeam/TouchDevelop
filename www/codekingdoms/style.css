/* Re-usable, generic rules */
.hidden {
  display: none !important;
}

.vbox {
  display: flex;
  display: -webkit-flex;
  flex-direction: column;
  -webkit-flex-direction: column;
}

.hbox {
  display: flex;
  display: -webkit-flex;
}

.flex1 {
  flex: 1;
  -webkit-flex: 1;
}

.flex3 {
  flex: 3;
  -webkit-flex: 3;
}

/* Whole page layout */
body {
  margin: 0;
  padding: 0;
  overflow: hidden;
}

body, input {
  font-family: "Segoe UI Light", "Segoe UI", "Segoe WP Light", "Segoe WP",
    "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", sans-serif;
  font-size: 1rem;
}

#main {
  margin: 0;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  overflow: hidden;
}

#editor {
  position: relative;
  margin: 0;
}

/* Script info box */
#script-box {
  margin-right: 1rem;
}

#script-name {
  font-size: 3rem;
}

#script-icons > *:not(:first-child) {
  display: inline-block;
  cursor: pointer;
  padding-left: .5rem;
}

#script-icons {
  font-size: 1.5rem;
  color: #fff;
  position: absolute;
  top: 4px;
  right: 12px;
}

/* Popups */
.popup {
  width: 500px;
  border: 5px solid #666;
  position: relative;
  background-color: white;
}

.popup::after {
  content: "";
  display: block;
  width: 0;

  position: absolute;
  top: -20px;
  right: 10px;

  border-style: solid;
  border-width: 0 20px 20px;
  border-color: #666 transparent;
}

.popup-inner {
  padding: 1rem;
}

#popup-edit input {
  border: 0;
}

/* Toolbox and commands */
#merge-commands {
  margin-left: 3em;
}

#merge-commands > * {
  cursor: pointer;
}

#merge-commands > .label {
  color: #a40000;
  font-weight: bold;
}

#commands a {
  padding-right: .5em;
  margin-right: 1em;
}


#toolbox {
  padding: 4px 4px 14px 4px;
  /* padding-top: 2px; */
  height: 60px;
  background: #333;
}

#log {
  overflow: auto;
  width: 500px;
  max-height: 500px;
}

.status {
  white-space: pre-wrap;
}

.status:first-letter {
  font-family: "Segoe UI Emoji", "Segoe UI Symbol", "Symbola", sans-serif;
}

.status:not(:first-letter) {
  font-weight: bold;
}

.status.error {
  color: #a40000;
}

.status:not(.error) {
  color: #4e9a06;
}

/* Buttons */
.roundbutton {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: column;
  flex-direction: column;
  color: black;
  text-decoration: none;
}

.roundsymbol {
  width: 34px;
  height: 52px;
  border: 2px solid #fff;
  border-radius: 50%;
  margin: .2rem;
  margin-bottom: 0;
  text-align: center;
  font-size: 2.6rem;
  line-height: 3.8rem;
  padding: .1em;
  font-family: "Segoe UI Emoji", "Segoe UI Symbol", "Symbola", sans-serif;
}

.roundsymbol > .fa {
  color: #fff;
  font-size: 24px;
  position: relative;
  top: -19px;
}

.roundlabel {
  padding-top: 0px;
  color: #fff;
  font-size: 80%;
  text-align: center;
}

/* Misc */
a.command, a.command:visited {
  color: black;
  font-weight: bold;
  text-decoration: none;
}

a.command:hover {
  text-decoration: underline;
}

/* Override a few blockly styles. */
.blocklyMainBackground {
  display: none;
}

.blocklyError > .blocklyPath {
  stroke: #d9301a !important;
  stroke-width: 3px;
}

.blocklySvg {
  background-color: transparent !important;
}

.blocklyToolboxDiv {
  background-color: rgba(180, 180, 180, .25) !important;
}

/* Animation for the compilation button */
.compiling {
  -webkit-animation-duration: 1.5s;
  -webkit-animation-name: rotating;
  -webkit-animation-iteration-count: infinite;
  animation-duration: 1.5s;
  animation-name: rotating;
  animation-iteration-count: infinite;

  color: #888;
  border-color: #888;
}

@-webkit-keyframes rotating {
  from {
    -webkit-transform: rotate(0turn);
  }

  to {
    -webkit-transform: rotate(1turn);
  }
}

@keyframes rotating {
  from {
    transform: rotate(0turn);
  }

  to {
    transform: rotate(1turn);
  }
}

/* vim: set ts=2 sw=2 sts=2: */

#ck_frame {
  
  position: absolute;
  width: 100%;
  height: 100%;
  background: #000;
  border: none;

}